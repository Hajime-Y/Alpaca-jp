{"id": "seed_task_31", "name": "complete_python_code", "instruction": "次の python コードの補完を提案してください。", "instances": [{"input": "import json\n\ndef read_task_from_jsonl(data_file):\n    '''This function will read a .jsonl file and return the ``task`` fields in all the lines.'''", "output": "import json\n\ndef read_task_from_jsonl(data_file):\n    '''この関数は.jsonlファイルを読み込み、すべての行``task``フィールドを返します。'''\n    with open(data_file) as fin:\n        return [json.loads(line)['task'] for line in fin]"}], "is_classification": false}
{"id": "seed_task_72", "name": "python_sorting", "instruction": "リストを大きいものから小さいものへソートするpython関数を書きなさい。", "instances": [{"input": "", "output": "def reverse_sort(lst):\n    return sorted(lst, reverse=True)"}], "is_classification": false}
{"id": "seed_task_139", "name": "program_for_summation", "instruction": "kからnまでの整数の和を計算するプログラムを書きなさい。", "instances": [{"input": "", "output": "def sum(k, n):\n    sum = 0\n    for i in range(k, n+1):\n        sum += i\n    return sum"}], "is_classification": false}
{"id": "seed_task_158", "name": "code_syntax_error", "instruction": "コードを読み、構文エラーがあるかどうかを検出する必要があります。エラーがあればtrueを出力し、なければfalseを出力してください。", "instances": [{"input": "def quick_sort(arr):\n    if len(arr) < 2:\n        return arr\n    else:\n        pivot = arr[0]\n        less = [i for i in arr[1:] if i <= pivot]\n        greater = [i for i in arr[1:] if i > pivot]\n        return quick_sort(less) + [pivot] + quick_sort(greater)", "output": "擬似"}], "is_classification": true}
